<?php
/**
 * @file
 * Install, update and uninstall functions for the Google Store Locator module.
 */

 /**
  * Implements hook_requirements().
  */
function google_store_locator_requirements($phase) {
  $requirements = array();
  $t = get_t();
  // Verify that Google's Store Locator library is present.
  if ($phase == 'runtime') {
    drupal_load('module', 'libraries');

    if (!is_dir(libraries_get_path('storelocator'))) {
      $requirements['google_store_locator'] = array(
        'title' => $t('Google Store Locator'),
        'description' => $t(
        'The required Google Store Locator library is missing.
        The library can be found at <a href="@url">@url</a>. Please add it to
        your library directory.',
        array(
          '@url' => 'http://code.google.com/p/storelocator/source/checkout')
        ),
        'severity' => REQUIREMENT_ERROR,
      );
    }
    else {
      $requirements['google_store_locator'] = array(
        'title' => $t('Google Store Locator'),
        'severity' => REQUIREMENT_OK,
        'value' => $t('Google Store Locator library Installed'),
      );
    }
  }
  return $requirements;
}

/**
 * Implements hook_enable().
 */
function google_store_locator_enable() {
  $t = get_t();
  drupal_load('module', 'libraries');

  if (!is_dir(libraries_get_path('storelocator'))) {
    drupal_set_message($t('The required Google Store Locator library is missing.
    The library can be found at <a href="@url">@url</a>. Please add it to
    your library directory.',
    array(
      '@url' => 'http://code.google.com/p/storelocator/source/checkout',
    )), 'error');
  }
}

/**
 * Place we put the field config and instance arrays.
 *
 * @return array
 *   The fields and their instances this module creates.
 */
function google_store_locator_installed_fields() {
  $fields = array();

  // Exported field: 'node-store_location-gsl_addressfield'.
  $fields['node-store_location-gsl_addressfield'] = array(
    'field_config' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'gsl_addressfield',
      'foreign keys' => array(),
      'indexes' => array(),
      'locked' => '0',
      'module' => 'addressfield',
      'settings' => array(),
      'translatable' => '0',
      'type' => 'addressfield',
    ),
    'field_instance' => array(
      'bundle' => 'store_location',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'checkout_pane' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
        'default' => array(
          'label' => 'above',
          'module' => 'addressfield',
          'settings' => array(
            'diff_custom' => 0,
            'diff_custom_settings' => array(),
            'format_handlers' => array(
              0 => 'address',
            ),
            'use_widget_handlers' => 1,
          ),
          'type' => 'addressfield_default',
          'weight' => 0,
        ),
        'product_list' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'gsl_addressfield',
      'label' => 'Store Locator Address',
      'required' => FALSE,
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'module' => 'addressfield',
        'settings' => array(
          'available_countries' => array(),
          'format_handlers' => array(
            0 => 'address',
          ),
        ),
        'type' => 'addressfield_standard',
        'weight' => 0,
      ),
    ),
  );

  // Exported field: 'node-store_location-gsl_geofield'.
  $fields['node-store_location-gsl_geofield'] = array(
    'field_config' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'gsl_geofield',
      'foreign keys' => array(),
      'indexes' => array(),
      'locked' => '0',
      'module' => 'geofield',
      'settings' => array(),
      'translatable' => '0',
      'type' => 'geofield',
    ),
    'field_instance' => array(
      'bundle' => 'store_location',
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'checkout_pane' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
        'default' => array(
          'label' => 'above',
          'module' => 'geofield',
          'settings' => array(
            'data' => 'full',
            'diff_custom' => 0,
            'diff_custom_settings' => array(),
          ),
          'type' => 'geofield_wkt',
          'weight' => 1,
        ),
        'product_list' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'gsl_geofield',
      'label' => 'Store Locator Geofield',
      'required' => 0,
      'settings' => array(
        'local_solr' => array(
          'enabled' => FALSE,
          'lat_field' => 'lat',
          'lng_field' => 'lng',
        ),
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'geocoder',
        'settings' => array(
          'delta_handling' => 'default',
          'geocoder_field' => 'gsl_addressfield',
          'geocoder_handler' => 'google',
          'handler_settings' => array(
            'google' => array(
              'all_results' => 0,
              'geometry_type' => 'point',
              'reject_results' => array(
                'APPROXIMATE' => 0,
                'GEOMETRIC_CENTER' => 0,
                'RANGE_INTERPOLATED' => 0,
                'ROOFTOP' => 0,
              ),
            ),
          ),
        ),
        'type' => 'geocoder',
        'weight' => 1,
      ),
    ),
  );

  // Exported field: 'node-store_location-gsl_feature_filter_list'.
  $fields['node-store_location-gsl_feature_filter_list'] = array(
    'field_config' => array(
      'active' => '1',
      'cardinality' => '-1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'gsl_feature_filter_list',
      'foreign keys' => array(),
      'indexes' => array(
        'value' => array(
          0 => 'value',
        ),
      ),
      'locked' => '0',
      'module' => 'list',
      'settings' => array(
        'profile2_private' => FALSE,
      ),
      'translatable' => '0',
      'type' => 'list_text',
    ),
    'field_instance' => array(
      'bundle' => 'store_location',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'list',
          'settings' => array(),
          'type' => 'list_default',
          'weight' => 4,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'gsl_feature_filter_list',
      'label' => 'Feature Filter List',
      'required' => 0,
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'options',
        'settings' => array(),
        'type' => 'options_buttons',
        'weight' => '4',
      ),
    ),
  );

  return $fields;
}

/**
 * Implements hook_install().
 */
function google_store_locator_install() {

  $fields = google_store_locator_installed_fields();

  foreach ($fields as $field) {
    // Look for existing field.
    $field_config = field_info_field($field['field_config']['field_name']);
    if (empty($field_config)) {
      field_create_field($field['field_config']);
    }
    // Look for existing instance.
    $instance = field_info_instance($field['field_instance']['entity_type'], $field['field_config']['field_name'], $field['field_instance']['bundle']);
    if (empty($instance)) {
      field_create_instance($field['field_instance']);
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function google_store_locator_uninstall() {
  variable_del('gsl_json_path');
  variable_del('gsl_display_path');
  variable_del('gsl_map_long');
  variable_del('gsl_map_lat');
  variable_del('gsl_map_zoom');
  variable_del('gsl_marker_icon');
  variable_del('gsl_items_per_panel');
  variable_del('gsl_loc_aware');
  variable_del('gsl_loc_aware_zoom');
}

/**
 * Implements hook_update_N().
 */
function google_store_locator_update_7100(&$sandbox) {
  variable_set('gsl_items_per_panel', variable_get('items_per_panel'));
}

/**
 * A hook update that adds the Feature Filter List field.
 */
function google_store_locator_update_7101() {

  $fields = google_store_locator_installed_fields();
  // Look for existing field.
  $field_config = field_info_field('gsl_feature_filter_list');
  if (empty($field_config)) {
    field_create_field($fields['node-store_location-gsl_feature_filter_list']['field_config']);
  }
  // Look for existing instance.
  $instance = field_info_instance($fields['node-store_location-gsl_feature_filter_list']['field_instance']['entity_type'], $fields['node-store_location-gsl_feature_filter_list']['field_config']['field_name'], $fields['node-store_location-gsl_feature_filter_list']['field_instance']['bundle']);
  if (empty($instance)) {
    field_create_instance($fields['node-store_location-gsl_feature_filter_list']['field_instance']);
  }

  return t('Feature Filter List field has been added to the Store Location content type');
}
